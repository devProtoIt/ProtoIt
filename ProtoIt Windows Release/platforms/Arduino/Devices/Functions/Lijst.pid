// Copyright (C) 2018 D. Kruithof
//
// GNU General Public License Usage
// --------------------------------
// This file may be used under the terms of the GNU General Public
// License version 3.0 as published by the Free Software Foundation
// and appearing in the file 'GNU-GPL.txt' included in the packaging
// of this file.  Please review the following information to ensure
// the GNU General Public License version 3.0 requirements will be
// met: http://www.gnu.org/copyleft/gpl.html.

<PLATFORM>
	ARDUINO
<AUTHOR>
	ProtoIt
<YEAR>
	2018

<DEVICE>
	FUNCTION, Lijst
<COPYRIGHT>
	2018, ProtoIt
<ICON>
	:/list
<GLOBAL>
	VariantList LIST;
<SIGNALIN>
	IXCUR, Signaal index, > Laatste, #P Uitgezonden waarde
	IXINS, Invoeg index, > Aan eind, #P Eénmalig toevoegen
	VALINS, Invoeg waarde, 1
	INSERT, Wanneer invoegen?
	IXDEL, Wis index, > Eerste, #P Eénmalig verwijderen, #E
	DELETE, Wanneer wissen?, #E
<SIGNALOUT>
	VALUE, Huidige waarde
	COUNT, Aantal
	SUM, Som
	AVG, Gemiddelde
	MAX, Hoogste waarde
	MIN, Laagste waarde
<CONSTANT>
	SET_FIRST, Eerste, 1, #P INDEX
	SET_LAST, Laatste, -1
	SET_APPEND, Aan eind, -2, #P TOEVOEGEN
	SET_NOW, Direct, 1, #P WANNEER ?
<PRIVATE>
	INSDONE, Toevoegen klaar, 0
	DELDONE, Verwijdern klaar, 0
<ROUTINE>
void calcAll()
{
	long val;
	SUM = 0;
	AVG = 0;
	MAX = 0;
	MIN = 0;
	COUNT = LIST.count();
	for ( int i = 0; i < LIST.count(); i++ ) {
		val = LIST.at( i);
		SUM += val;
		if ( val > (long) MAX ) MAX = val;
		if ( val < (long) MIN ) MIN = val;
	}
	AVG = SUM / COUNT;
}
long normalIndex( long val)
{
	val--;
	if ( val == -2 || val >= LIST.count() )
		val = LIST.count() - 1;
	if ( val == -3 )
		val = LIST.count();
	if ( val < 0 )
		val = 0;
	return val;
}
<STEPINIT>
	INSDONE = 0;
	DELDONE = 0;
<SENSORUPDATE>
	VALUE = LIST.at( normalIndex( IXCUR));
<FUNCTIONUPDATE>
	if ( (int) INSERT && !(int) INSDONE && (VALINS.toString() != "") ) {
	    LIST.insert( normalIndex( IXINS), VALINS);
		INSDONE = 1;
		calcAll();
	}
	if ( (int) DELETE && !(int) DELDONE ) {
	    LIST.remove( normalIndex( IXDEL));
		DELDONE = 1;
		calcAll();
	}
<END>
