// Copyright (C) 2018 D. Kruithof
//
// GNU General Public License Usage
// --------------------------------
// This file may be used under the terms of the GNU General Public
// License version 3.0 as published by the Free Software Foundation
// and appearing in the file 'GNU-GPL.txt' included in the packaging
// of this file.  Please review the following information to ensure
// the GNU General Public License version 3.0 requirements will be
// met: http://www.gnu.org/copyleft/gpl.html.

<PLATFORM>
	MINDSTORMS
<AUTHOR>
	ProtoIt
<YEAR>
	2018

<DEVICE>
	ACTUATOR, Motor
<COPYRIGHT>
	2018, ProtoIt
<ICON>
	motor.png
<PORT>
	PORT, Poort
<PRIVATE>
	ACTIVE, Active
<SIGNALIN>
	SPEED, Snelheid (%), #P Snelheid en richting
	DIRECTION, Richting
	START, Start wanneer?, > Direct, #P Start en stop, #E
	STOP, Stop wanneer?, > Nooit, #E
<CONSTANT>
	SET_OFF, Stop, 0, #P SNELHEID
	SET_MAX, Maximum, 100
	SET_FORWARD, Vooruit, 1, #P RICHTING
	SET_REVERSE, Achteruit, 2
	SET_NOW, Direct, 1, #P START EN STOP
	SET_NEVER, Nooit, 0
<GLOBAL>
int direction;
<ROUTINE>
void Motor( string port, int direction, int speed)
{
	switch ( direction ) {
	case 0 :
		if ( port == "A" ) Off( OUT_A);
		if ( port == "B" ) Off( OUT_B);
		if ( port == "C" ) Off( OUT_C);
		if ( port == "AB" ) Off( OUT_AB);
		if ( port == "AC" ) Off( OUT_AC);
		if ( port == "BC" ) Off( OUT_BC);
		if ( port == "ABC" ) Off( OUT_ABC);
		break;
	case 1 :
		if ( port == "A" ) OnFwd( OUT_A, speed);
		if ( port == "B" ) OnFwd( OUT_B, speed);
		if ( port == "C" ) OnFwd( OUT_C, speed);
		if ( port == "AB" ) OnFwd( OUT_AB, speed);
		if ( port == "AC" ) OnFwd( OUT_AC, speed);
		if ( port == "BC" ) OnFwd( OUT_BC, speed);
		if ( port == "ABC" ) OnFwd( OUT_ABC, speed);
		break;
	case 2 :
		if ( port == "A" ) OnRev( OUT_A, speed);
		if ( port == "B" ) OnRev( OUT_B, speed);
		if ( port == "C" ) OnRev( OUT_C, speed);
		if ( port == "AB" ) OnRev( OUT_AB, speed);
		if ( port == "AC" ) OnRev( OUT_AC, speed);
		if ( port == "BC" ) OnRev( OUT_BC, speed);
		if ( port == "ABC" ) OnRev( OUT_ABC, speed);
		break;
	}
}
<STEPINIT>
	SetInteger( START, 0);
	SetInteger( STOP, 0);
	SetInteger( ACTIVE, 0);
<SETUP>
	SetInteger( PORT, PORT.num - 1);
	if ( port == "A" || port == "B" || port == "C" ||
		 port == "AB" || port == "AC" || port == "BC" ||
		 port == "ABC" ) {
	  direction = SET_OFF.num;
	  Motor( PORT.str, direction, SPEED.num);
	else {
	  ClearScreen();
	  TextOut( 0, LCD_LINE1, "Fout: geen poort");
	  TextOut( 0, LCD_LINE2, "(Motor)");
	  while( true);
	}
<FUNCTIONUPDATE>
	if ( START.num )
		SetInteger( ACTIVE, 1);
	if ( STOP.num && ACTIVE.num ) {
		SetInteger( ACTIVE, 0);
		direction = SET_OFF.num;
		Motor( PORT.str, direction, SPEED.num);
	}
<ACTUATORUPDATE>
	if ( ACTIVE.num ) {
		if ( SPEED.num > 100 ) SetInteger( SPEED, 100);
		if ( SPEED.num < 0 ) SetInteger( SPEED, 0);
		if ( !SPEED.num ) SetInteger( DIRECTION, 0);
		switch ( DIRECTION.num ) {
			case 0 : direction = SET_OFF.num; break;
			case 1 : direction = SET_FORWARD.num; break;
			case 2 : direction = SET_REVERSE.num; break;
		}
		Motor( PORT.str, direction, SPEED.num);
	}
<END>
