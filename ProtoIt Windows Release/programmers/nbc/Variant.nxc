// Copyright (C) 2014 D. Kruithof
//
// GNU General Public License Usage
// --------------------------------
// This file may be used under the terms of the GNU General Public
// License version 3.0 as published by the Free Software Foundation
// and appearing in the file 'GNU-GPL.txt' included in the packaging
// of this file.  Please review the following information to ensure
// the GNU General Public License version 3.0 requirements will be
// met: http://www.gnu.org/copyleft/gpl.html.

struct Variant
{
	string 	str;	// string representation
	long	num;	// integer representation
#ifdef ENHANCED
	float	flt;	// float representation
#endif
};

string StripStr( string str)
{
	string s;
	int x = 0;
	int l = StrLen( str);
	
	while ( x < l && str[x] == ' ' ) x++;
	if ( x < l ) {
		l--;
		while ( l > x && str[l] == ' ' ) l--;
		l++;
		s = SubStr( str, x, l - x);
	}
	else
		s = "";

	return s;
}

long pow10( long e)
{
	long val = 1;
	while ( e > 0) {
		val *= 10;
		e--;
		}
	return val;
}

#ifdef ENHANCED
long round( float val)
{
	long n = val;
	if ( val - n < 0.5 )
		return n;
	else
		return n + 1;
}
#endif

bool IsNumber( string str)
{
	if ( !StrLen( str) ) return false;
	
	int x = 0;
	bool dec = false;

	if ( StrLen(str) > 0 && str[0] == '-' )
		x = 1;
	for ( ; x < StrLen( str); x++ ) {
		if ( str[x] == '.' ) {
			if ( dec ) return false;
			dec = true;
		}
		else
			if ( str[x] < '0' || str[x] > '9' )
				return false;
	}

	return true;
}

#ifdef ENHANCED
void SetInteger( Variant& var, long val)
#else
void SetInt( Variant& var, long val)
#endif
{
	var.num = val;
#ifdef ENHANCED
	var.flt = val;
#endif
	var.str = NumToStr( val);
}

#ifdef ENHANCED
void SetFloat( Variant& var, float val)
{
	var.num = round( val);
	var.flt = val;
	var.str = NumToStr( val);
}
#endif

#ifdef ENHANCED
void SetString( Variant& var, string str)
#else
void SetStr( Variant& var, string str)
#endif
{
	var.str = StripStr( str);
#ifdef ENHANCED
	var.flt = StrToNum( str);
	var.num = var.flt;
#else
	var.num = StrToNum( str);
#endif
}
